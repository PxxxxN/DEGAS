
path.model = '~/Desktop/Monet/'
path.data = '~/Desktop/Monet/Data/validationAD/'
path.result = '~/Desktop/validationAD/'

setwd(path.model)
setPython("/home/zhihuan/anaconda3/bin")
tmpDir = paste0(path.result, 'tmp/')

library(pROC)
library(scrattch.io)
library(edgeR)
library(Rtsne)
library(ggExtra)
library(ggplot2)
options(stringsAsFactors = FALSE)

#*************************************************************************
# Loading human single cell data
tome = paste0(path.data, "transcrip.tome")
exons <- read_tome_dgCMatrix(tome,"data/t_exon")
#introns <- read_tome_dgCMatrix(tome,"data/t_intron")  # Excluded since not coding regions
ngenes = dim(exons)[1]
ncells = dim(exons)[2]
cell_names = read_tome_sample_names(tome)
gene_names = read_tome_gene_names(tome)
nonzero_perc = Matrix::rowSums(exons>0)/ncells
nonzero_keep = nonzero_perc>=0.7
#CPM and log2 normalized
#cell_counts = Matrix::colSums(exons)
#cpm_data = Matrix::t(Matrix::t(exons*1e6)/cell_counts)
#norm_data = as.matrix(log2(cpm_data[nonzero_keep,]+1))
#log2 normalized
norm_data = as.matrix(log2(exons[nonzero_keep,]+1))

# Retrieving annotation
cell_annot = read.csv(paste0(path.data,'sample_annotations.csv'),stringsAsFactors = FALSE)
cell_annot$cluster_label_major = sub(' .*','',cell_annot$cluster_label)
table(cell_annot$cluster_label_major)
colnames(norm_data) = cell_names
row.names(norm_data) = gene_names[nonzero_keep]
clust_exclude = c('Donor','Endo','Outlier','Peri','VLMC')
cell_annot = cell_annot[!(cell_annot$cluster_label_major %in% clust_exclude),]
norm_data = norm_data[,cell_annot$sample_name]
vars = apply(norm_data,1,var)
vars_keep = vars>=quantile(vars,0.7)
norm_data = t(norm_data[vars_keep,])
Xsc = norm_data
Ysc = cell_annot
rm(exons,cell_annot,cpm_data,norm_data,cell_counts,cell_names,clust_exclude,gene_names,ncells,ngenes,nonzero_keep,nonzero_perc,tome)

#*************************************************************************
# Loading human RNA-seq AD data
data = read.table(paste0(path.data,'MSBB.expr_for_net_gene.csv'),sep=',',row.names=1,header=TRUE,stringsAsFactors = FALSE)
#CPM and log2 normalized
#samp_counts = Matrix::colSums(data)
#cpm_data = t(t(data*1e6)/samp_counts)
#norm_data = as.matrix(log2(cpm_data+1))
norm_data = as.matrix(log2(data+1))
vars = apply(norm_data,1,var)
vars_keep = vars>=quantile(vars,0.5)
norm_data = norm_data[vars_keep,]
Xpat = t(norm_data)
Ypat = sub('_.*','',colnames(norm_data))
rm(data,samp_counts,cpm_data,norm_data,vars,vars_keep)

#*************************************************************************
# Final processing
genes_keep = intersect(colnames(Xsc),colnames(Xpat))
patDat = Xpat[,genes_keep]
scDat = Xsc[,genes_keep]
patLab = toOneHot(as.character(Ypat))
scLab = toOneHot(as.character(Ysc$cluster_label_major))
patDat = t(apply(t(apply(as.matrix(patDat),1,normFunc)),1,scaleFunc))
scDat = t(apply(t(apply(as.matrix(scDat),1,normFunc)),1,scaleFunc))
# rm(Xsc,Ysc,Xpat,Ypat)

#*************************************************************************
# Running model
architecture = 'Standard'
depth = 1
set.seed(1)
cv = 10
scgrps = splitKfoldCV(dim(scDat)[1],cv)
patgrps = splitKfoldCV(dim(patDat)[1],cv)
scscPreds = list()
patpatPreds = list()
scpatPreds = list()
patscPreds = list()
for (i in 1:cv){
  ccModel1 = runCCMTL(scDat[unlist(scgrps[-i]),],scLab[unlist(scgrps[-i]),],patDat[unlist(patgrps[-i]),],patLab[unlist(patgrps[-i]),],tmpDir,'ClassClass',architecture,depth)
  scscPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'sc')
  patpatPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'pat')
  scpatPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'pat')
  patscPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'sc')
}

deconv_pat = do.call(rbind,patscPreds)
colnames(deconv_pat) = colnames(scLab)
grp = sub('_.*','',row.names(deconv_pat))
t.test(deconv_pat[,'Inh']~grp)
t.test(deconv_pat[,'Exc']~grp)
t.test(deconv_pat[,'Micro']~grp)

deconv_sc = do.call(rbind,scpatPreds)
colnames(deconv_sc) = colnames(patLab)
grp = fromOneHot(scLab)[unlist(scgrps)]
t.test(deconv_sc[,'AD']~grp=='Inh')
t.test(deconv_sc[,'AD']~grp=='Exc')
t.test(deconv_sc[,'AD']~grp=='Micro')

for (i in 1:dim(scLab)[2]){
  roc_obj = roc(scLab[unlist(scgrps),i],do.call(rbind,scscPreds)[,i])
  auc(roc_obj)
  plot(roc_obj,print.auc=TRUE,main=paste0(colnames(scLab)[i]))
}

for (i in 1:dim(patLab)[2]){
  roc_obj = roc(patLab[unlist(patgrps),i],do.call(rbind,patpatPreds)[,i])
  auc(roc_obj)
  plot(roc_obj,print.auc=TRUE,main=paste0(colnames(patLab)[i]))
}

# GSEA analysis

# library(fgsea)
# get_gsea <- function(ccModel1,){
# 
#   scOutputLayer = abs(ccModel1@Theta[[2]])>quantile(abs(ccModel1@Theta[[2]]),0.8)
#   patOutputLayer = abs(ccModel1@Theta[[3]])>quantile(abs(ccModel1@Theta[[3]]),0.8)
#   which(bleh[,5]+bleh2[,1]>1)
#   gmt = loadGMT("~/Desktop/MM_scRNA_RNA_MTL/c2.all.v6.2.symbols.gmt")
#   grank = ccModel1@Theta[[1]][,7]
#   names(grank) = genes_keep
#   fgseaRes <- fgsea::fgsea(pathways = gmt,
#                   stats = grank,
#                   minSize=15,
#                   maxSize=500,
#                   nperm=10000)
# }
# View(fgseaRes[order(fgseaRes$pval),])

#Plotting single cell characteristics
scDat_tsne = Rtsne(scDat[unlist(scgrps),])
colnames(scDat_tsne$Y) = c('tSNE1','tSNE2')
samp = sample(dim(scDat_tsne$Y)[1],1000)
p = ggplot(as.data.frame(scDat_tsne$Y[samp,]),aes(x=tSNE1,y=tSNE2)) + geom_point(aes(size=deconv_sc[samp,1],color=fromOneHot(scLab[unlist(scgrps),])[samp]))
pdf('~/Desktop/validationAD/scDat_scatter20200204.pdf',height=10,width=12)
plot(p+labs(size='AD percentage',color='Cell type'))
dev.off()

#Plotting patient characteristics
patDat_tsne = Rtsne(patDat[unlist(patgrps),],dims=2)
colnames(patDat_tsne$Y) = c('tSNE1','tSNE2')
p = ggplot(as.data.frame(patDat_tsne$Y),aes(x=tSNE1,y=tSNE2)) + geom_point(aes(size=deconv_pat[,'Micro'],color=fromOneHot(patLab[unlist(patgrps),])))+labs(size='Microglia percentage',color='AD Diagnosis')
pdf(paste0(path.result, 'patDatMicro_scatter.pdf'),height=10,width=12)
ggMarginal(p,groupColour=TRUE, groupFill=TRUE)
dev.off()
p = ggplot(as.data.frame(patDat_tsne$Y),aes(x=tSNE1,y=tSNE2)) + geom_point(aes(size=deconv_pat[,'Inh'],color=fromOneHot(patLab[unlist(patgrps),])))+labs(size='Inhibitory percentage',color='AD Diagnosis')
pdf(paste0(path.result, 'patDatInt_scatter.pdf'),height=10,width=12)
ggMarginal(p,groupColour=TRUE, groupFill=TRUE)
dev.off()
p = ggplot(as.data.frame(patDat_tsne$Y),aes(x=tSNE1,y=tSNE2)) + geom_point(aes(size=deconv_pat[,'Exc'],color=fromOneHot(patLab[unlist(patgrps),])))+labs(size='Excitory percentage',color='AD Diagnosis')
pdf(paste0(path.result, 'patDatExc_scatter.pdf'),height=10,width=12)
ggMarginal(p,groupColour=TRUE, groupFill=TRUE)
dev.off()

#Plotting patient covariates
samp_annot = read.csv(paste0(path.data, 'MSBB_RNAseq_covariates.csv'))
samp_annot = samp_annot[samp_annot$fileType=="bam",]
samp_annot = samp_annot[-grep('_resequenced',samp_annot$sampleIdentifier),]
row.names(samp_annot) = samp_annot$barcode
pat_annot = read.csv(paste0(path.data, 'MSBB_clinical.csv'))
#pat_annot$updatedID = sub('.*_','',pat_annot$individualIdentifier)
#pat_annot$updatedID = sapply(pat_annot$updatedID,function(x) as.character(as.numeric(x)))
#row.names(pat_annot) = pat_annot$updatedID

pat_order = sub('.*_','',row.names(patDat[unlist(patgrps),]))
sex = getFeat(samp_annot[pat_order,'individualIdentifier'],pat_annot,'individualIdentifier','SEX')
plaq = as.numeric(as.character(getFeat(samp_annot[pat_order,'individualIdentifier'],pat_annot,'individualIdentifier','PlaqueMean')))
bbs = as.numeric(as.character(getFeat(samp_annot[pat_order,'individualIdentifier'],pat_annot,'individualIdentifier','bbscore')))
cdr = as.numeric(as.character(getFeat(samp_annot[pat_order,'individualIdentifier'],pat_annot,'individualIdentifier','CDR')))
brodmann = samp_annot[pat_order,'BrodmannArea']
ad = fromOneHot(patLab[unlist(patgrps),])
np1 = as.numeric(as.character(getFeat(samp_annot[pat_order,'individualIdentifier'],pat_annot,'individualIdentifier','NP.1')))
age = as.numeric(as.character(getFeat(samp_annot[pat_order,'individualIdentifier'],pat_annot,'individualIdentifier','AOD')))
age[is.na(age)] = 90
pat = as.character(getFeat(samp_annot[pat_order,'individualIdentifier'],pat_annot,'individualIdentifier','individualIdentifier'))
pat_char = cbind(row.names(patDat[unlist(patgrps),]),pat,np1,sex,age)

area = 'BM44'
patDat2 = patDat[unlist(patgrps),]
patDat_tsne = Rtsne(patDat2[brodmann==area,])
colnames(patDat_tsne$Y) = c('tSNE1','tSNE2')
p = ggplot(as.data.frame(patDat_tsne$Y),aes(x=tSNE1,y=tSNE2)) + geom_point(aes(size=cdr[brodmann==area]*bbs[brodmann==area],color=ad[brodmann==area]))+labs(size='CDR*BBS',color='AD status')

ggMarginal(p,groupColour=TRUE, groupFill=TRUE)



pdf(paste0(path.result, 'patDatCovariates20200204.pdf'),height=10,width=12)
dev.off()
