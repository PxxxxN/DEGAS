setwd(path.model)
#setPython("/usr/local/bin/python3")    #changed 20200320
use_python("/usr/local/bin/python3")    #changed 20200320
tmpDir = paste0(path.result, 'tmp/')
#*************************************************************************
# Running model
architecture = 'Standard'
depth = 1
set.seed(1)
cv = 10
scgrps = splitKfoldCV(dim(scDat)[1],cv)
patgrps = splitKfoldCV(dim(patDat)[1],cv)
scscPreds = list()
patpatPreds = list()
scpatPreds = list()
patscPreds = list()
for (i in 1:cv){
ccModel1 = runCCMTL(scDat[unlist(scgrps[-i]),],scLab[unlist(scgrps[-i]),],patDat[unlist(patgrps[-i]),],patLab[unlist(patgrps[-i]),],tmpDir,'ClassClass',architecture,depth)
scscPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'sc')
patpatPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'pat')
scpatPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'pat')
patscPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'sc')
}
library(DEGAS)
#*************************************************************************
# Running model
architecture = 'Standard'
depth = 1
set.seed(1)
cv = 10
scgrps = splitKfoldCV(dim(scDat)[1],cv)
patgrps = splitKfoldCV(dim(patDat)[1],cv)
scscPreds = list()
patpatPreds = list()
scpatPreds = list()
patscPreds = list()
for (i in 1:cv){
ccModel1 = runCCMTL(scDat[unlist(scgrps[-i]),],scLab[unlist(scgrps[-i]),],patDat[unlist(patgrps[-i]),],patLab[unlist(patgrps[-i]),],tmpDir,'ClassClass',architecture,depth)
scscPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'sc')
patpatPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'pat')
scpatPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'pat')
patscPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'sc')
}
path.model = '/Users/joh507/Library/R/3.5/library/DEGAS/tools'
path.data = '~/Desktop/DEGAS/DEGAS_20200226/validationAD/'
path.result = '~/Desktop/DEGAS/DEGAS_20200226/validationAD/'
setwd(path.model)
#setPython("/usr/local/bin/python3")    #changed 20200320
use_python("/usr/local/bin/python3")    #changed 20200320
tmpDir = paste0(path.result, 'tmp/')
#*************************************************************************
# Running model
architecture = 'Standard'
depth = 1
set.seed(1)
cv = 10
scgrps = splitKfoldCV(dim(scDat)[1],cv)
patgrps = splitKfoldCV(dim(patDat)[1],cv)
scscPreds = list()
patpatPreds = list()
scpatPreds = list()
patscPreds = list()
for (i in 1:cv){
ccModel1 = runCCMTL(scDat[unlist(scgrps[-i]),],scLab[unlist(scgrps[-i]),],patDat[unlist(patgrps[-i]),],patLab[unlist(patgrps[-i]),],tmpDir,'ClassClass',architecture,depth)
scscPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'sc')
patpatPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'pat')
scpatPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'pat')
patscPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'sc')
}
py_run_file("/Users/joh507/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp/ClassClassMTL.py")
py_run_file("/Users/joh507/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp/ClassClassMTL.py")
library(DEGAS)
#*************************************************************************
# Running model
architecture = 'Standard'
depth = 1
set.seed(1)
cv = 10
scgrps = splitKfoldCV(dim(scDat)[1],cv)
patgrps = splitKfoldCV(dim(patDat)[1],cv)
scscPreds = list()
patpatPreds = list()
scpatPreds = list()
patscPreds = list()
for (i in 1:cv){
ccModel1 = runCCMTL(scDat[unlist(scgrps[-i]),],scLab[unlist(scgrps[-i]),],patDat[unlist(patgrps[-i]),],patLab[unlist(patgrps[-i]),],tmpDir,'ClassClass',architecture,depth)
scscPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'sc')
patpatPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'pat')
scpatPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'pat')
patscPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'sc')
}
path.model = '/Users/joh507/Library/R/3.5/library/DEGAS/tools'
path.data = '~/Desktop/DEGAS/DEGAS_20200226/validationAD/'
path.result = '~/Desktop/DEGAS/DEGAS_20200226/validationAD/'
setwd(path.model)
#setPython("/usr/local/bin/python3")    #changed 20200320
use_python("/usr/local/bin/python3")    #changed 20200320
tmpDir = paste0(path.result, 'tmp/')
library(reticulate)
library(pROC)
library(scrattch.io)
#library(edgeR)
library(Rtsne)
library(ggExtra)
library(ggplot2)
options(stringsAsFactors = FALSE)
library(DEGAS)
path.model = '/Users/j
''
''
path.model = '/Users/joh507/Library/R/3.5/library/DEGAS/tools'
path.data = '~/Desktop/DEGAS/DEGAS_20200226/validationAD/'
path.result = '~/Desktop/DEGAS/DEGAS_20200226/validationAD/'
setwd(path.model)
#setPython("/usr/local/bin/python3")    #changed 20200320
use_python("/usr/local/bin/python3")    #changed 20200320
tmpDir = paste0(path.result, 'tmp/')
#*************************************************************************
# Running model
architecture = 'Standard'
depth = 1
set.seed(1)
cv = 10
scgrps = splitKfoldCV(dim(scDat)[1],cv)
patgrps = splitKfoldCV(dim(patDat)[1],cv)
scscPreds = list()
patpatPreds = list()
scpatPreds = list()
patscPreds = list()
for (i in 1:cv){
ccModel1 = runCCMTL(scDat[unlist(scgrps[-i]),],scLab[unlist(scgrps[-i]),],patDat[unlist(patgrps[-i]),],patLab[unlist(patgrps[-i]),],tmpDir,'ClassClass',architecture,depth)
scscPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'sc')
patpatPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'pat')
scpatPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'pat')
patscPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'sc')
}
py_run_file("/Users/joh507/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp/ClassClassMTL.py")
#*************************************************************************
# Running model
architecture = 'Standard'
depth = 1
set.seed(1)
cv = 10
scgrps = splitKfoldCV(dim(scDat)[1],cv)
patgrps = splitKfoldCV(dim(patDat)[1],cv)
scscPreds = list()
patpatPreds = list()
scpatPreds = list()
patscPreds = list()
for (i in 1:cv){
ccModel1 = runCCMTL(scDat[unlist(scgrps[-i]),],scLab[unlist(scgrps[-i]),],patDat[unlist(patgrps[-i]),],patLab[unlist(patgrps[-i]),],tmpDir,'ClassClass',architecture,depth)
scscPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'sc')
patpatPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'pat')
scpatPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'pat')
patscPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'sc')
}
py_run_file("/Users/joh507/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp/ClassClassMTL.py")
py_run_file("/Users/joh507/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp/ClassClassMTL.py")
#*************************************************************************
# Running model
architecture = 'Standard'
depth = 1
set.seed(1)
cv = 10
scgrps = splitKfoldCV(dim(scDat)[1],cv)
patgrps = splitKfoldCV(dim(patDat)[1],cv)
scscPreds = list()
patpatPreds = list()
scpatPreds = list()
patscPreds = list()
for (i in 1:cv){
ccModel1 = runCCMTL(scDat[unlist(scgrps[-i]),],scLab[unlist(scgrps[-i]),],patDat[unlist(patgrps[-i]),],patLab[unlist(patgrps[-i]),],tmpDir,'ClassClass',architecture,depth)
scscPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'sc')
patpatPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'pat')
scpatPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'pat')
patscPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'sc')
}
py_run_file("/Users/joh507/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp/ClassClassMTL.py")
library(DEGAS)
#*************************************************************************
# Running model
architecture = 'Standard'
depth = 1
set.seed(1)
cv = 10
scgrps = splitKfoldCV(dim(scDat)[1],cv)
patgrps = splitKfoldCV(dim(patDat)[1],cv)
scscPreds = list()
patpatPreds = list()
scpatPreds = list()
patscPreds = list()
for (i in 1:cv){
ccModel1 = runCCMTL(scDat[unlist(scgrps[-i]),],scLab[unlist(scgrps[-i]),],patDat[unlist(patgrps[-i]),],patLab[unlist(patgrps[-i]),],tmpDir,'ClassClass',architecture,depth)
scscPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'sc')
patpatPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'pat')
scpatPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'pat')
patscPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'sc')
}
py_run_file("/Users/joh507/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp/ClassClassMTL.py")
#*************************************************************************
# Running model
architecture = 'Standard'
depth = 1
set.seed(1)
cv = 10
scgrps = splitKfoldCV(dim(scDat)[1],cv)
patgrps = splitKfoldCV(dim(patDat)[1],cv)
scscPreds = list()
patpatPreds = list()
scpatPreds = list()
patscPreds = list()
for (i in 1:cv){
ccModel1 = runCCMTL(scDat[unlist(scgrps[-i]),],scLab[unlist(scgrps[-i]),],patDat[unlist(patgrps[-i]),],patLab[unlist(patgrps[-i]),],tmpDir,'ClassClass',architecture,depth)
scscPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'sc')
patpatPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'pat')
scpatPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'pat')
patscPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'sc')
}
library(reticulate)
library(pROC)
library(scrattch.io)
#library(edgeR)
library(Rtsne)
library(ggExtra)
library(ggplot2)
options(stringsAsFactors = FALSE)
library(DEGAS)
path.model = '/Users/joh507/Library/R/3.5/library/DEGAS/tools'
path.data = '~/Desktop/DEGAS/DEGAS_20200226/validationAD/'
path.result = '~/Desktop/DEGAS/DEGAS_20200226/validationAD/'
setwd(path.model)
#setPython("/usr/local/bin/python3")    #changed 20200320
use_python("/usr/local/bin/python3")    #changed 20200320
tmpDir = paste0(path.result, 'tmp/')
#*************************************************************************
# Running model
architecture = 'Standard'
depth = 1
set.seed(1)
cv = 10
scgrps = splitKfoldCV(dim(scDat)[1],cv)
patgrps = splitKfoldCV(dim(patDat)[1],cv)
scscPreds = list()
patpatPreds = list()
scpatPreds = list()
patscPreds = list()
for (i in 1:cv){
ccModel1 = runCCMTL(scDat[unlist(scgrps[-i]),],scLab[unlist(scgrps[-i]),],patDat[unlist(patgrps[-i]),],patLab[unlist(patgrps[-i]),],tmpDir,'ClassClass',architecture,depth)
scscPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'sc')
patpatPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'pat')
scpatPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'pat')
patscPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'sc')
}
py_run_file("/Users/joh507/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp/ClassClassMTL.py")
library(reticulate)
library(pROC)
library(scrattch.io)
#library(edgeR)
library(Rtsne)
library(ggExtra)
library(ggplot2)
options(stringsAsFactors = FALSE)
library(DEGAS)
#*************************************************************************
# Running model
architecture = 'Standard'
depth = 1
set.seed(1)
cv = 10
scgrps = splitKfoldCV(dim(scDat)[1],cv)
patgrps = splitKfoldCV(dim(patDat)[1],cv)
scscPreds = list()
patpatPreds = list()
scpatPreds = list()
patscPreds = list()
for (i in 1:cv){
ccModel1 = runCCMTL(scDat[unlist(scgrps[-i]),],scLab[unlist(scgrps[-i]),],patDat[unlist(patgrps[-i]),],patLab[unlist(patgrps[-i]),],tmpDir,'ClassClass',architecture,depth)
scscPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'sc')
patpatPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'pat')
scpatPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'pat')
patscPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'sc')
}
path.model = '/Users/joh507/Library/R/3.5/library/DEGAS/tools'
path.data = '~/Desktop/DEGAS/DEGAS_20200226/validationAD/'
path.result = '~/Desktop/DEGAS/DEGAS_20200226/validationAD/'
setwd(path.model)
#setPython("/usr/local/bin/python3")    #changed 20200320
use_python("/usr/local/bin/python3")    #changed 20200320
tmpDir = paste0(path.result, 'tmp/')
#*************************************************************************
# Running model
architecture = 'Standard'
depth = 1
set.seed(1)
cv = 10
scgrps = splitKfoldCV(dim(scDat)[1],cv)
patgrps = splitKfoldCV(dim(patDat)[1],cv)
scscPreds = list()
patpatPreds = list()
scpatPreds = list()
patscPreds = list()
for (i in 1:cv){
ccModel1 = runCCMTL(scDat[unlist(scgrps[-i]),],scLab[unlist(scgrps[-i]),],patDat[unlist(patgrps[-i]),],patLab[unlist(patgrps[-i]),],tmpDir,'ClassClass',architecture,depth)
scscPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'sc')
patpatPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'pat')
scpatPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'pat')
patscPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'sc')
}
py_run_file("/Users/joh507/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp/ClassClassMTL.py")
py_run_file("/Users/joh507/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp/ClassClassMTL.py /Users/joh507/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp")
py_run_file("/Users/joh507/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp/ClassClassMTL.py")
library(reticulate)
py_run_file("/Users/joh507/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp/ClassClassMTL.py")
py_run_file("~/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp/ClassClassMTL.py")
setwd("~/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp/")
getwd()
py_run_file("ClassClassMTL.py")
py_run_file("~/Desktop/DEGAS/DEGAS_20200226/validationAD/tmp/ClassClassMTL.py")
getwd()
py_run_file("ClassClassMTL.py")
py_run_file("ClassClassMTL.py")
py_config()
#*************************************************************************
# Running model
architecture = 'Standard'
depth = 1
set.seed(1)
cv = 10
scgrps = splitKfoldCV(dim(scDat)[1],cv)
patgrps = splitKfoldCV(dim(patDat)[1],cv)
scscPreds = list()
patpatPreds = list()
scpatPreds = list()
patscPreds = list()
for (i in 1:cv){
ccModel1 = runCCMTL(scDat[unlist(scgrps[-i]),],scLab[unlist(scgrps[-i]),],patDat[unlist(patgrps[-i]),],patLab[unlist(patgrps[-i]),],tmpDir,'ClassClass',architecture,depth)
scscPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'sc')
patpatPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'pat')
scpatPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'pat')
patscPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'sc')
}
system("python -c 'print('Hello')'")
system("python -c 'import tensorflow as tf")
system(paste0("python",path.result,"tmp/ClassClassMTL.py ",path.result))
path.result = '~/Desktop/DEGAS/DEGAS_20200226/validationAD/'
system(paste0("python",path.result,"tmp/ClassClassMTL.py ",path.result))
system(paste0("python ",path.result,"tmp/ClassClassMTL.py ",path.result))
library(pROC)
library(scrattch.io)
#library(edgeR)
library(Rtsne)
library(ggExtra)
library(ggplot2)
options(stringsAsFactors = FALSE)
library(DEGAS)
path.model = '/Users/joh507/Library/R/3.5/library/DEGAS/tools'
path.data = '~/Desktop/DEGAS/DEGAS_20200226/validationAD/'
path.result = '~/Desktop/DEGAS/DEGAS_20200226/validationAD/'
setwd(path.model)
setPython("/usr/local/bin/python3")    #changed 20200320
#use_python("/usr/local/bin/python3")    #changed 20200320
tmpDir = paste0(path.result, 'tmp/')
#*************************************************************************
# Loading human single cell data
tome = paste0(path.data, "transcrip.tome")
exons <- read_tome_dgCMatrix(tome,"data/t_exon")
ngenes = dim(exons)[1]
ncells = dim(exons)[2]
cell_names = read_tome_sample_names(tome)
gene_names = read_tome_gene_names(tome)
nonzero_perc = Matrix::rowSums(exons>0)/ncells
nonzero_keep = nonzero_perc>=0.7
norm_data = as.matrix(log2(exons[nonzero_keep,]+1))
# Retrieving annotation
cell_annot = read.csv(paste0(path.data,'sample_annotations.csv'),stringsAsFactors = FALSE)
cell_annot$cluster_label_major = sub(' .*','',cell_annot$cluster_label)
table(cell_annot$cluster_label_major)
colnames(norm_data) = cell_names
row.names(norm_data) = gene_names[nonzero_keep]
clust_exclude = c('Donor','Endo','Outlier','Peri','VLMC')
cell_annot = cell_annot[!(cell_annot$cluster_label_major %in% clust_exclude),]
norm_data = norm_data[,cell_annot$sample_name]
vars = apply(norm_data,1,var)
vars_keep = vars>=quantile(vars,0.7)
norm_data = t(norm_data[vars_keep,])
Xsc = norm_data
Ysc = cell_annot
rm(exons,cell_annot,cpm_data,norm_data,cell_counts,cell_names,clust_exclude,gene_names,ncells,ngenes,nonzero_keep,nonzero_perc,tome)
#*************************************************************************
# Loading human RNA-seq AD data
data = read.table(paste0(path.data,'MSBB.expr_for_net_gene.csv'),sep=',',row.names=1,header=TRUE,stringsAsFactors = FALSE)
norm_data = as.matrix(log2(data+1))
vars = apply(norm_data,1,var)
vars_keep = vars>=quantile(vars,0.5)
norm_data = norm_data[vars_keep,]
Xpat = t(norm_data)
Ypat = sub('_.*','',colnames(norm_data))
rm(data,samp_counts,cpm_data,norm_data,vars,vars_keep)
#*************************************************************************
# Final processing
genes_keep = intersect(colnames(Xsc),colnames(Xpat))
patDat = Xpat[,genes_keep]
scDat = Xsc[,genes_keep]
patLab = toOneHot(as.character(Ypat))
scLab = toOneHot(as.character(Ysc$cluster_label_major))
patDat = t(apply(t(apply(as.matrix(patDat),1,normFunc)),1,scaleFunc))
scDat = t(apply(t(apply(as.matrix(scDat),1,normFunc)),1,scaleFunc))
#rm(Xsc,Ysc,Xpat,Ypat)
#*************************************************************************
# Running model
architecture = 'Standard'
depth = 1
set.seed(1)
cv = 10
scgrps = splitKfoldCV(dim(scDat)[1],cv)
patgrps = splitKfoldCV(dim(patDat)[1],cv)
scscPreds = list()
patpatPreds = list()
scpatPreds = list()
patscPreds = list()
for (i in 1:cv){
ccModel1 = runCCMTL(scDat[unlist(scgrps[-i]),],scLab[unlist(scgrps[-i]),],patDat[unlist(patgrps[-i]),],patLab[unlist(patgrps[-i]),],tmpDir,'ClassClass',architecture,depth)
scscPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'sc')
patpatPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'pat')
scpatPreds[[i]] = predClass(ccModel1,scDat[scgrps[[i]],],'pat')
patscPreds[[i]] = predClass(ccModel1,patDat[patgrps[[i]],],'sc')
}
system(paste0("python ",path.result,"tmp/ClassClassMTL.py ",path.result))
setPython("/usr/local/bin/python3")    #changed 20200320
system(paste0("python ",path.result,"tmp/ClassClassMTL.py ",path.result))
setPython("/usr/local/bin/python3")    #changed 20200320
system(paste0("python ",path.result,"tmp/ClassClassMTL.py ",path.result))
system("python -V")
setPython("/usr/local/bin/python3")    #changed 20200320
system("python -V")
checkOS()
checkForPy()
system("alias python='/usr/local/bin/python3'")
checkForPy()
Sys.setenv("alias python='/usr/local/bin/python3")
system("alias python='/usr/local/bin/python3'")
system("python -V")
system("alias python='/usr/local/bin/python3'; python -V")
Sys.setenv(python = '/usr/local/bin/python3')
system("python -V")
system("python3 -V")
system("alias python='/usr/local/bin/python3'; python -V")
system2("alias python='/usr/local/bin/python3'; python -V")
system2("alias python='/usr/local/bin/python3'")
pyloc <<- '/usr/local/bin/python3'
system(paste0(pyloc,' -V'))
rm(pyloc)
setPython <- function(path2python){
pyloc <<- path2python
#Sys.setenv(PATH = paste(c(path2python,Sys.getenv("PATH")),collapse = .Platform$path.sep))
}
setPython("/usr/local/bin/python3")    #changed 20200320
checkForPy <- function(){
return(system(paste0(pyloc," -V")))
}
checkForPy()
library(DEGAS)
setPython("/usr/local/bin/python3")    #changed 20200320
checkForPy()
library(DEGAS)
rm(pyloc)
chekcForPy()
checkForPy()
library(DEGAS)
library(DEGAS)
library(DEGAS)
checkForPy()
library(Seurat)
library(DEGAS)
checkForPy()
library(DEGAS)
checkForPy()
library(DEGAS)
DEGAS:::pyloc
library(DEGAS)
pyloc
DEGAS::pyloc
DEGAS:::pyloc
DEGAS:::variable
DEGAS::variable
DEGAS:variable
variable
.variable
DEGAS:::variable
library(DEGAS)
DEGAS:::pyloc
pyloc
library(DEGAS)
DEGAS:::env
library(DEGAS)
pkg.globals
library(DEGAS)
library(DEGAS)
#setwd(path.model)
initDEGAS()
library(DEGAS)
initDEGAS()
initDEGAS()
initDEGAS
library(DEGAS)
initDEGAS()
remove.packages("DEGAS")
library(DEGAS)
#setwd(path.model)
initDEGAS()
remove.packages("DEGAS")
library(DEGAS)
